name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MODULAR_HOME: ${{ github.workspace }}/.modular

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Modular CLI
      run: |
        curl https://get.modular.com | sh -
        echo "${{ env.MODULAR_HOME }}/bin" >> $GITHUB_PATH
    
    - name: Install Mojo
      run: |
        modular install mojo
    
    - name: Set up pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.34.0
    
    - name: Install dependencies
      run: pixi install
    
    - name: Run unit tests
      run: pixi run test-unit
    
    - name: Run integration tests  
      run: pixi run test-integration
    
    - name: Run benchmarks
      run: pixi run benchmark
    
    - name: Build package
      run: pixi run mojo package swisstable -o swiss-table.mojopkg
    
    - name: Upload package artifact
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: swiss-table-mojopkg-${{ matrix.os }}
        path: swiss-table.mojopkg

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Modular CLI
      run: |
        curl https://get.modular.com | sh -
        echo "${{ env.MODULAR_HOME }}/bin" >> $GITHUB_PATH
    
    - name: Install Mojo
      run: |
        modular install mojo
    
    - name: Set up pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.34.0
    
    - name: Install dependencies
      run: pixi install
    
    - name: Format check
      run: |
        pixi run format
        git diff --exit-code || (echo "Code not formatted. Run 'pixi run format'" && exit 1)